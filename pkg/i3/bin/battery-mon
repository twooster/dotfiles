#!/bin/bash
set -e

if [ -z "$XDG_RUNTIME_DIR" ] ; then
  LOCK_FILE="$HOME/.battery-mon.lock"
else
  LOCK_FILE="${XDG_RUNTIME_DIR}/battery-mon.lock"
fi

[ "${LOCK_ACQUIRED}" != "$0" ] && exec env LOCK_ACQUIRED="$0" flock -en "$LOCK_FILE" "$0" "$@" || :

WARN_PERCENT=20      # Warn at this level
CRITICAL_PERCENT=10  # Critical warning at this level
SUSPEND_PERCENT=5    # Suspend at this level

BATTERY=0
SLEEP_TIME=30

notify() {
  notify-send -c device -i battery-low -u "$1" -t 10000 -- "${@:2}"
}

critical() {
  notify critical CRITICAL: "$@"
}

warn() {
  notify normal WARNING: "$@"
}

BAT="/sys/class/power_supply/BAT${BATTERY}"
LAST_STATE=0

main() {
  while sleep "${SLEEP_TIME}" ; do
    if ! i3 nop > /dev/null ; then
      echo "i3 seems to have died, battery-mon is dying"
      exit 0
    fi
    POWER_SUPPLY_ENERGY_NOW=$( cat ${BAT}/energy_now )
    POWER_SUPPLY_ENERGY_FULL_DESIGN=$( cat ${BAT}/energy_full_design )
    POWER_SUPPLY_STATUS=$( cat ${BAT}/status )

    PCT=$(( ${POWER_SUPPLY_ENERGY_NOW} * 100 / ${POWER_SUPPLY_ENERGY_FULL_DESIGN} ))
    if [ "${PCT}" -le "${SUSPEND_PERCENT}" ]; then
      STATE=3
    elif [ "${PCT}" -le "${CRITICAL_PERCENT}" ]; then
      STATE=2
    elif [ "${PCT}" -le "${WARN_PERCENT}" ]; then
      STATE=1
    else
      STATE=0
    fi

    if [ "${POWER_SUPPLY_STATUS}" = "Discharging" ]; then
      if [ "${STATE}" -gt "${LAST_STATE}" ]; then
        case "${STATE}" in
          3)
            warn "Attempting to suspend NOW!"
            systemctl hybrid-sleep || \
              systemctl suspend || \
              critical "Unable to suspend! SYSTEM STATE AT RISK"
            ;;
          2)
            critical "Battery critically low, at ${PCT}%! Hibernating at ${SUSPEND_PERCENT}%!"
            ;;
          1)
            warn "Battery getting low, at ${PCT}%"
            ;;
          *)
            true
            ;;
        esac
      fi
    fi

    LAST_STATE="${STATE}"
  done
}

main
